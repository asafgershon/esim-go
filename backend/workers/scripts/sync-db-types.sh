#!/bin/bash

# Colors for output
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

# Paths
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
WORKER_DIR="$(dirname "$SCRIPT_DIR")"
SERVER_DIR="$WORKER_DIR/../../server"
OUTPUT_DIR="$WORKER_DIR/src/types"
OUTPUT_FILE="$OUTPUT_DIR/database.types.ts"

echo -e "${GREEN}🔄 Syncing database types to worker package...${NC}"

# Create output directory if it doesn't exist
mkdir -p "$OUTPUT_DIR"

# Method 1: Try using Supabase CLI to generate fresh types
if command -v supabase &> /dev/null; then
    echo -e "${YELLOW}📋 Attempting to generate types using Supabase CLI...${NC}"
    
    cd "$SERVER_DIR" || exit 1
    
    # Check if Supabase is linked
    if [ -f ".supabase/config.toml" ]; then
        # Generate types
        if supabase gen types typescript --project-id "dgkyjkzkwzmjjurzvcxy" --schema public.catalog_bundles > "$OUTPUT_FILE.tmp" 2>/dev/null; then
            mv "$OUTPUT_FILE.tmp" "$OUTPUT_FILE"
            echo -e "${GREEN}✅ Generated fresh types from local Supabase${NC}"
            SUCCESS=true
        else
            echo -e "${YELLOW}⚠️  Local generation failed, trying remote...${NC}"
            if [ -n "$SUPABASE_PROJECT_ID" ]; then
                if supabase gen types typescript --project-id "$SUPABASE_PROJECT_ID" > "$OUTPUT_FILE.tmp" 2>/dev/null; then
                    mv "$OUTPUT_FILE.tmp" "$OUTPUT_FILE"
                    echo -e "${GREEN}✅ Generated fresh types from remote Supabase${NC}"
                    SUCCESS=true
                fi
            fi
        fi
    fi
fi

# Method 2: Copy from server package if generation failed
if [ ! -v SUCCESS ]; then
    echo -e "${YELLOW}📝 Copying existing types from server package...${NC}"
    
    SOURCE_FILE="$SERVER_DIR/src/database.types.ts"
    
    if [ -f "$SOURCE_FILE" ]; then
        cp "$SOURCE_FILE" "$OUTPUT_FILE"
        echo -e "${GREEN}✅ Copied database types from server package${NC}"
    else
        echo -e "${RED}❌ Could not find database.types.ts in server package${NC}"
        exit 1
    fi
fi

# Add header to the file
TEMP_FILE=$(mktemp)
cat > "$TEMP_FILE" << EOF
/**
 * Database types for worker package
 * Generated on: $(date -u +"%Y-%m-%dT%H:%M:%SZ")
 * 
 * DO NOT EDIT THIS FILE DIRECTLY
 * Run 'bun run db:types' to update
 */

EOF

cat "$OUTPUT_FILE" >> "$TEMP_FILE"
mv "$TEMP_FILE" "$OUTPUT_FILE"

echo -e "${GREEN}✅ Database types ready at: $OUTPUT_FILE${NC}"

# Verify the file was created
if [ -f "$OUTPUT_FILE" ]; then
    LINE_COUNT=$(wc -l < "$OUTPUT_FILE")
    echo -e "${GREEN}📊 Generated file has $LINE_COUNT lines${NC}"
else
    echo -e "${RED}❌ Failed to create output file${NC}"
    exit 1
fi