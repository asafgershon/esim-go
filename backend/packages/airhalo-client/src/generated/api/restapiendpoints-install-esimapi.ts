/* tslint:disable */
/* eslint-disable */
/**
 *  Airalo Developer Platform 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import globalAxios from 'axios';
// Some imports not used depending on template conditions
// @ts-ignore
import { DUMMY_BASE_URL, assertParamExists, setApiKeyToObject, setBasicAuthToObject, setBearerAuthToObject, setOAuthToObject, setSearchParams, serializeDataIfNeeded, toPathString, createRequestFunction } from '../common';
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, type RequestArgs, BaseAPI, RequiredError, operationServerMap } from '../base';
// @ts-ignore
import type { V2SimsSimIccidGet200Response } from '../models';
// @ts-ignore
import type { V2SimsSimIccidInstructionsGet200Response } from '../models';
/**
 * RESTAPIEndpointsInstallESIMApi - axios parameter creator
 * @export
 */
export const RESTAPIEndpointsInstallESIMApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * This endpoint allows you to retrieve the details of a specific eSIM from the Airalo Partners API using the eSIM\'s ICCID. Note that only eSIM orders made via the API are retrievable via this endpoint. You can include related data in the response by specifying optional parameters.  The access token, obtained from the \"Request Access Token\" endpoint, should be included in the request.  For more informations, best practices visit our FAQ page: [https://airalopartners.zendesk.com/hc/en-us/sections/13207524820893-FAQ](https://airalopartners.zendesk.com/hc/en-us/sections/13207524820893-FAQ)  **direct_apple_installation_url:**  Partner API now supports direct installation on iOS devices. With the introduction of Universal Links by Apple, users with iOS 17.4 or higher can directly install eSIMs using a special URL, which can be provided to your end clients if they are using iOS version 17.4 or above.
         * @summary Get eSIM
         * @param {string} simIccid The ICCID of the eSIM for which you want to retrieve the details.
         * @param {string} accept 
         * @param {string} authorization 
         * @param {string} [include] Optional. A comma-separated string to include related data in the response. Possible values are \&quot;order\&quot;, \&quot;order.status\&quot;, \&quot;order.user\&quot; and \&quot;share\&quot;.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v2SimsSimIccidGet: async (simIccid: string, accept: string, authorization: string, include?: string, options: RawAxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'simIccid' is not null or undefined
            assertParamExists('v2SimsSimIccidGet', 'simIccid', simIccid)
            // verify required parameter 'accept' is not null or undefined
            assertParamExists('v2SimsSimIccidGet', 'accept', accept)
            // verify required parameter 'authorization' is not null or undefined
            assertParamExists('v2SimsSimIccidGet', 'authorization', authorization)
            const localVarPath = `/v2/sims/{sim_iccid}`
                .replace(`{${"sim_iccid"}}`, encodeURIComponent(String(simIccid)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (include !== undefined) {
                localVarQueryParameter['include'] = include;
            }


    
            if (accept != null) {
                localVarHeaderParameter['Accept'] = String(accept);
            }
            if (authorization != null) {
                localVarHeaderParameter['Authorization'] = String(authorization);
            }
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * This endpoint allows you to retrieve the language specific installation instructions of a specific eSIM from the Airalo Partners API using the eSIM\'s ICCID.  The access token, obtained from the \"Request Access Token\" endpoint, should be included in the request.  For more informations, best practices visit our FAQ page: [https://airalopartners.zendesk.com/hc/en-us/sections/13207524820893-FAQ](https://airalopartners.zendesk.com/hc/en-us/sections/13207524820893-FAQ)  **direct_apple_installation_url:**  Partner API now supports direct installation on iOS devices. With the introduction of Universal Links by Apple, users with iOS 17.4 or higher can directly install eSIMs using a special URL, which can be provided to your end clients if they are using iOS version 17.4 or above.
         * @summary Get installation instructions
         * @param {string} simIccid The ICCID of the eSIM for which you want to retrieve the details.
         * @param {string} accept 
         * @param {string} authorization 
         * @param {string} acceptLanguage 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v2SimsSimIccidInstructionsGet: async (simIccid: string, accept: string, authorization: string, acceptLanguage: string, options: RawAxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'simIccid' is not null or undefined
            assertParamExists('v2SimsSimIccidInstructionsGet', 'simIccid', simIccid)
            // verify required parameter 'accept' is not null or undefined
            assertParamExists('v2SimsSimIccidInstructionsGet', 'accept', accept)
            // verify required parameter 'authorization' is not null or undefined
            assertParamExists('v2SimsSimIccidInstructionsGet', 'authorization', authorization)
            // verify required parameter 'acceptLanguage' is not null or undefined
            assertParamExists('v2SimsSimIccidInstructionsGet', 'acceptLanguage', acceptLanguage)
            const localVarPath = `/v2/sims/{sim_iccid}/instructions`
                .replace(`{${"sim_iccid"}}`, encodeURIComponent(String(simIccid)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;


    
            if (accept != null) {
                localVarHeaderParameter['Accept'] = String(accept);
            }
            if (authorization != null) {
                localVarHeaderParameter['Authorization'] = String(authorization);
            }
            if (acceptLanguage != null) {
                localVarHeaderParameter['Accept-Language'] = String(acceptLanguage);
            }
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * RESTAPIEndpointsInstallESIMApi - functional programming interface
 * @export
 */
export const RESTAPIEndpointsInstallESIMApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = RESTAPIEndpointsInstallESIMApiAxiosParamCreator(configuration)
    return {
        /**
         * This endpoint allows you to retrieve the details of a specific eSIM from the Airalo Partners API using the eSIM\'s ICCID. Note that only eSIM orders made via the API are retrievable via this endpoint. You can include related data in the response by specifying optional parameters.  The access token, obtained from the \"Request Access Token\" endpoint, should be included in the request.  For more informations, best practices visit our FAQ page: [https://airalopartners.zendesk.com/hc/en-us/sections/13207524820893-FAQ](https://airalopartners.zendesk.com/hc/en-us/sections/13207524820893-FAQ)  **direct_apple_installation_url:**  Partner API now supports direct installation on iOS devices. With the introduction of Universal Links by Apple, users with iOS 17.4 or higher can directly install eSIMs using a special URL, which can be provided to your end clients if they are using iOS version 17.4 or above.
         * @summary Get eSIM
         * @param {string} simIccid The ICCID of the eSIM for which you want to retrieve the details.
         * @param {string} accept 
         * @param {string} authorization 
         * @param {string} [include] Optional. A comma-separated string to include related data in the response. Possible values are \&quot;order\&quot;, \&quot;order.status\&quot;, \&quot;order.user\&quot; and \&quot;share\&quot;.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async v2SimsSimIccidGet(simIccid: string, accept: string, authorization: string, include?: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<V2SimsSimIccidGet200Response>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.v2SimsSimIccidGet(simIccid, accept, authorization, include, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['RESTAPIEndpointsInstallESIMApi.v2SimsSimIccidGet']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
        /**
         * This endpoint allows you to retrieve the language specific installation instructions of a specific eSIM from the Airalo Partners API using the eSIM\'s ICCID.  The access token, obtained from the \"Request Access Token\" endpoint, should be included in the request.  For more informations, best practices visit our FAQ page: [https://airalopartners.zendesk.com/hc/en-us/sections/13207524820893-FAQ](https://airalopartners.zendesk.com/hc/en-us/sections/13207524820893-FAQ)  **direct_apple_installation_url:**  Partner API now supports direct installation on iOS devices. With the introduction of Universal Links by Apple, users with iOS 17.4 or higher can directly install eSIMs using a special URL, which can be provided to your end clients if they are using iOS version 17.4 or above.
         * @summary Get installation instructions
         * @param {string} simIccid The ICCID of the eSIM for which you want to retrieve the details.
         * @param {string} accept 
         * @param {string} authorization 
         * @param {string} acceptLanguage 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async v2SimsSimIccidInstructionsGet(simIccid: string, accept: string, authorization: string, acceptLanguage: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<V2SimsSimIccidInstructionsGet200Response>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.v2SimsSimIccidInstructionsGet(simIccid, accept, authorization, acceptLanguage, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['RESTAPIEndpointsInstallESIMApi.v2SimsSimIccidInstructionsGet']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
    }
};

/**
 * RESTAPIEndpointsInstallESIMApi - factory interface
 * @export
 */
export const RESTAPIEndpointsInstallESIMApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = RESTAPIEndpointsInstallESIMApiFp(configuration)
    return {
        /**
         * This endpoint allows you to retrieve the details of a specific eSIM from the Airalo Partners API using the eSIM\'s ICCID. Note that only eSIM orders made via the API are retrievable via this endpoint. You can include related data in the response by specifying optional parameters.  The access token, obtained from the \"Request Access Token\" endpoint, should be included in the request.  For more informations, best practices visit our FAQ page: [https://airalopartners.zendesk.com/hc/en-us/sections/13207524820893-FAQ](https://airalopartners.zendesk.com/hc/en-us/sections/13207524820893-FAQ)  **direct_apple_installation_url:**  Partner API now supports direct installation on iOS devices. With the introduction of Universal Links by Apple, users with iOS 17.4 or higher can directly install eSIMs using a special URL, which can be provided to your end clients if they are using iOS version 17.4 or above.
         * @summary Get eSIM
         * @param {RESTAPIEndpointsInstallESIMApiV2SimsSimIccidGetRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v2SimsSimIccidGet(requestParameters: RESTAPIEndpointsInstallESIMApiV2SimsSimIccidGetRequest, options?: RawAxiosRequestConfig): AxiosPromise<V2SimsSimIccidGet200Response> {
            return localVarFp.v2SimsSimIccidGet(requestParameters.simIccid, requestParameters.accept, requestParameters.authorization, requestParameters.include, options).then((request) => request(axios, basePath));
        },
        /**
         * This endpoint allows you to retrieve the language specific installation instructions of a specific eSIM from the Airalo Partners API using the eSIM\'s ICCID.  The access token, obtained from the \"Request Access Token\" endpoint, should be included in the request.  For more informations, best practices visit our FAQ page: [https://airalopartners.zendesk.com/hc/en-us/sections/13207524820893-FAQ](https://airalopartners.zendesk.com/hc/en-us/sections/13207524820893-FAQ)  **direct_apple_installation_url:**  Partner API now supports direct installation on iOS devices. With the introduction of Universal Links by Apple, users with iOS 17.4 or higher can directly install eSIMs using a special URL, which can be provided to your end clients if they are using iOS version 17.4 or above.
         * @summary Get installation instructions
         * @param {RESTAPIEndpointsInstallESIMApiV2SimsSimIccidInstructionsGetRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v2SimsSimIccidInstructionsGet(requestParameters: RESTAPIEndpointsInstallESIMApiV2SimsSimIccidInstructionsGetRequest, options?: RawAxiosRequestConfig): AxiosPromise<V2SimsSimIccidInstructionsGet200Response> {
            return localVarFp.v2SimsSimIccidInstructionsGet(requestParameters.simIccid, requestParameters.accept, requestParameters.authorization, requestParameters.acceptLanguage, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * RESTAPIEndpointsInstallESIMApi - interface
 * @export
 * @interface RESTAPIEndpointsInstallESIMApi
 */
export interface RESTAPIEndpointsInstallESIMApiInterface {
    /**
     * This endpoint allows you to retrieve the details of a specific eSIM from the Airalo Partners API using the eSIM\'s ICCID. Note that only eSIM orders made via the API are retrievable via this endpoint. You can include related data in the response by specifying optional parameters.  The access token, obtained from the \"Request Access Token\" endpoint, should be included in the request.  For more informations, best practices visit our FAQ page: [https://airalopartners.zendesk.com/hc/en-us/sections/13207524820893-FAQ](https://airalopartners.zendesk.com/hc/en-us/sections/13207524820893-FAQ)  **direct_apple_installation_url:**  Partner API now supports direct installation on iOS devices. With the introduction of Universal Links by Apple, users with iOS 17.4 or higher can directly install eSIMs using a special URL, which can be provided to your end clients if they are using iOS version 17.4 or above.
     * @summary Get eSIM
     * @param {RESTAPIEndpointsInstallESIMApiV2SimsSimIccidGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RESTAPIEndpointsInstallESIMApiInterface
     */
    v2SimsSimIccidGet(requestParameters: RESTAPIEndpointsInstallESIMApiV2SimsSimIccidGetRequest, options?: RawAxiosRequestConfig): AxiosPromise<V2SimsSimIccidGet200Response>;

    /**
     * This endpoint allows you to retrieve the language specific installation instructions of a specific eSIM from the Airalo Partners API using the eSIM\'s ICCID.  The access token, obtained from the \"Request Access Token\" endpoint, should be included in the request.  For more informations, best practices visit our FAQ page: [https://airalopartners.zendesk.com/hc/en-us/sections/13207524820893-FAQ](https://airalopartners.zendesk.com/hc/en-us/sections/13207524820893-FAQ)  **direct_apple_installation_url:**  Partner API now supports direct installation on iOS devices. With the introduction of Universal Links by Apple, users with iOS 17.4 or higher can directly install eSIMs using a special URL, which can be provided to your end clients if they are using iOS version 17.4 or above.
     * @summary Get installation instructions
     * @param {RESTAPIEndpointsInstallESIMApiV2SimsSimIccidInstructionsGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RESTAPIEndpointsInstallESIMApiInterface
     */
    v2SimsSimIccidInstructionsGet(requestParameters: RESTAPIEndpointsInstallESIMApiV2SimsSimIccidInstructionsGetRequest, options?: RawAxiosRequestConfig): AxiosPromise<V2SimsSimIccidInstructionsGet200Response>;

}

/**
 * Request parameters for v2SimsSimIccidGet operation in RESTAPIEndpointsInstallESIMApi.
 * @export
 * @interface RESTAPIEndpointsInstallESIMApiV2SimsSimIccidGetRequest
 */
export interface RESTAPIEndpointsInstallESIMApiV2SimsSimIccidGetRequest {
    /**
     * The ICCID of the eSIM for which you want to retrieve the details.
     * @type {string}
     * @memberof RESTAPIEndpointsInstallESIMApiV2SimsSimIccidGet
     */
    readonly simIccid: string

    /**
     * 
     * @type {string}
     * @memberof RESTAPIEndpointsInstallESIMApiV2SimsSimIccidGet
     */
    readonly accept: string

    /**
     * 
     * @type {string}
     * @memberof RESTAPIEndpointsInstallESIMApiV2SimsSimIccidGet
     */
    readonly authorization: string

    /**
     * Optional. A comma-separated string to include related data in the response. Possible values are \&quot;order\&quot;, \&quot;order.status\&quot;, \&quot;order.user\&quot; and \&quot;share\&quot;.
     * @type {string}
     * @memberof RESTAPIEndpointsInstallESIMApiV2SimsSimIccidGet
     */
    readonly include?: string
}

/**
 * Request parameters for v2SimsSimIccidInstructionsGet operation in RESTAPIEndpointsInstallESIMApi.
 * @export
 * @interface RESTAPIEndpointsInstallESIMApiV2SimsSimIccidInstructionsGetRequest
 */
export interface RESTAPIEndpointsInstallESIMApiV2SimsSimIccidInstructionsGetRequest {
    /**
     * The ICCID of the eSIM for which you want to retrieve the details.
     * @type {string}
     * @memberof RESTAPIEndpointsInstallESIMApiV2SimsSimIccidInstructionsGet
     */
    readonly simIccid: string

    /**
     * 
     * @type {string}
     * @memberof RESTAPIEndpointsInstallESIMApiV2SimsSimIccidInstructionsGet
     */
    readonly accept: string

    /**
     * 
     * @type {string}
     * @memberof RESTAPIEndpointsInstallESIMApiV2SimsSimIccidInstructionsGet
     */
    readonly authorization: string

    /**
     * 
     * @type {string}
     * @memberof RESTAPIEndpointsInstallESIMApiV2SimsSimIccidInstructionsGet
     */
    readonly acceptLanguage: string
}

/**
 * RESTAPIEndpointsInstallESIMApi - object-oriented interface
 * @export
 * @class RESTAPIEndpointsInstallESIMApi
 * @extends {BaseAPI}
 */
export class RESTAPIEndpointsInstallESIMApi extends BaseAPI implements RESTAPIEndpointsInstallESIMApiInterface {
    /**
     * This endpoint allows you to retrieve the details of a specific eSIM from the Airalo Partners API using the eSIM\'s ICCID. Note that only eSIM orders made via the API are retrievable via this endpoint. You can include related data in the response by specifying optional parameters.  The access token, obtained from the \"Request Access Token\" endpoint, should be included in the request.  For more informations, best practices visit our FAQ page: [https://airalopartners.zendesk.com/hc/en-us/sections/13207524820893-FAQ](https://airalopartners.zendesk.com/hc/en-us/sections/13207524820893-FAQ)  **direct_apple_installation_url:**  Partner API now supports direct installation on iOS devices. With the introduction of Universal Links by Apple, users with iOS 17.4 or higher can directly install eSIMs using a special URL, which can be provided to your end clients if they are using iOS version 17.4 or above.
     * @summary Get eSIM
     * @param {RESTAPIEndpointsInstallESIMApiV2SimsSimIccidGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RESTAPIEndpointsInstallESIMApi
     */
    public v2SimsSimIccidGet(requestParameters: RESTAPIEndpointsInstallESIMApiV2SimsSimIccidGetRequest, options?: RawAxiosRequestConfig) {
        return RESTAPIEndpointsInstallESIMApiFp(this.configuration).v2SimsSimIccidGet(requestParameters.simIccid, requestParameters.accept, requestParameters.authorization, requestParameters.include, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * This endpoint allows you to retrieve the language specific installation instructions of a specific eSIM from the Airalo Partners API using the eSIM\'s ICCID.  The access token, obtained from the \"Request Access Token\" endpoint, should be included in the request.  For more informations, best practices visit our FAQ page: [https://airalopartners.zendesk.com/hc/en-us/sections/13207524820893-FAQ](https://airalopartners.zendesk.com/hc/en-us/sections/13207524820893-FAQ)  **direct_apple_installation_url:**  Partner API now supports direct installation on iOS devices. With the introduction of Universal Links by Apple, users with iOS 17.4 or higher can directly install eSIMs using a special URL, which can be provided to your end clients if they are using iOS version 17.4 or above.
     * @summary Get installation instructions
     * @param {RESTAPIEndpointsInstallESIMApiV2SimsSimIccidInstructionsGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RESTAPIEndpointsInstallESIMApi
     */
    public v2SimsSimIccidInstructionsGet(requestParameters: RESTAPIEndpointsInstallESIMApiV2SimsSimIccidInstructionsGetRequest, options?: RawAxiosRequestConfig) {
        return RESTAPIEndpointsInstallESIMApiFp(this.configuration).v2SimsSimIccidInstructionsGet(requestParameters.simIccid, requestParameters.accept, requestParameters.authorization, requestParameters.acceptLanguage, options).then((request) => request(this.axios, this.basePath));
    }
}

