/* tslint:disable */
/* eslint-disable */
/**
 * EasyCard Transactions API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  OperationResponse,
  PaymentRequestCreate,
  PaymentRequestResponse,
} from '../models/index';

export interface ApiPaymentIntentPaymentIntentIDDeleteRequest {
    paymentIntentID: string;
}

export interface ApiPaymentIntentPaymentIntentIDGetRequest {
    paymentIntentID: string;
    showDeleted?: boolean;
}

export interface ApiPaymentIntentPostRequest {
    paymentRequestCreate?: PaymentRequestCreate;
}

/**
 * PaymentIntentApi - interface
 * 
 * @export
 * @interface PaymentIntentApiInterface
 */
export interface PaymentIntentApiInterface {
    /**
     * 
     * @summary Delete payment intent
     * @param {string} paymentIntentID 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PaymentIntentApiInterface
     */
    apiPaymentIntentPaymentIntentIDDeleteRaw(requestParameters: ApiPaymentIntentPaymentIntentIDDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<OperationResponse>>;

    /**
     * Delete payment intent
     */
    apiPaymentIntentPaymentIntentIDDelete(requestParameters: ApiPaymentIntentPaymentIntentIDDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<OperationResponse>;

    /**
     * 
     * @summary Get payment intent details
     * @param {string} paymentIntentID 
     * @param {boolean} [showDeleted] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PaymentIntentApiInterface
     */
    apiPaymentIntentPaymentIntentIDGetRaw(requestParameters: ApiPaymentIntentPaymentIntentIDGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PaymentRequestResponse>>;

    /**
     * Get payment intent details
     */
    apiPaymentIntentPaymentIntentIDGet(requestParameters: ApiPaymentIntentPaymentIntentIDGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PaymentRequestResponse>;

    /**
     * 
     * @summary Create payment link to Checkout Page
     * @param {PaymentRequestCreate} [paymentRequestCreate] Payment parameters
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PaymentIntentApiInterface
     */
    apiPaymentIntentPostRaw(requestParameters: ApiPaymentIntentPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<OperationResponse>>;

    /**
     * Create payment link to Checkout Page
     */
    apiPaymentIntentPost(requestParameters: ApiPaymentIntentPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<OperationResponse>;

}

/**
 * 
 */
export class PaymentIntentApi extends runtime.BaseAPI implements PaymentIntentApiInterface {

    /**
     * Delete payment intent
     */
    async apiPaymentIntentPaymentIntentIDDeleteRaw(requestParameters: ApiPaymentIntentPaymentIntentIDDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<OperationResponse>> {
        if (requestParameters.paymentIntentID === null || requestParameters.paymentIntentID === undefined) {
            throw new runtime.RequiredError('paymentIntentID','Required parameter requestParameters.paymentIntentID was null or undefined when calling apiPaymentIntentPaymentIntentIDDelete.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/paymentIntent/{paymentIntentID}`.replace(`{${"paymentIntentID"}}`, encodeURIComponent(String(requestParameters.paymentIntentID))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * Delete payment intent
     */
    async apiPaymentIntentPaymentIntentIDDelete(requestParameters: ApiPaymentIntentPaymentIntentIDDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<OperationResponse> {
        const response = await this.apiPaymentIntentPaymentIntentIDDeleteRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Get payment intent details
     */
    async apiPaymentIntentPaymentIntentIDGetRaw(requestParameters: ApiPaymentIntentPaymentIntentIDGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PaymentRequestResponse>> {
        if (requestParameters.paymentIntentID === null || requestParameters.paymentIntentID === undefined) {
            throw new runtime.RequiredError('paymentIntentID','Required parameter requestParameters.paymentIntentID was null or undefined when calling apiPaymentIntentPaymentIntentIDGet.');
        }

        const queryParameters: any = {};

        if (requestParameters.showDeleted !== undefined) {
            queryParameters['showDeleted'] = requestParameters.showDeleted;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/paymentIntent/{paymentIntentID}`.replace(`{${"paymentIntentID"}}`, encodeURIComponent(String(requestParameters.paymentIntentID))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * Get payment intent details
     */
    async apiPaymentIntentPaymentIntentIDGet(requestParameters: ApiPaymentIntentPaymentIntentIDGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PaymentRequestResponse> {
        const response = await this.apiPaymentIntentPaymentIntentIDGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Create payment link to Checkout Page
     */
    async apiPaymentIntentPostRaw(requestParameters: ApiPaymentIntentPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<OperationResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/paymentIntent`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.paymentRequestCreate,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * Create payment link to Checkout Page
     */
    async apiPaymentIntentPost(requestParameters: ApiPaymentIntentPostRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<OperationResponse> {
        const response = await this.apiPaymentIntentPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
