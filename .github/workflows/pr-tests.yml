name: PR Tests

on:
  pull_request:
    branches:
      - development
    paths:
      - 'client/**'
      - 'server/**'
      - 'packages/**'
      - '.github/workflows/pr-tests.yml'

jobs:
  client-tests:
    name: Client Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        app: [web-app, dashboard]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
          
      - name: Install dependencies
        run: |
          cd client/apps/${{ matrix.app }}
          bun install
          
      - name: Run ${{ matrix.app }} tests
        run: |
          cd client/apps/${{ matrix.app }}
          bun run test --run
          
      - name: Type check ${{ matrix.app }}
        run: |
          cd client/apps/${{ matrix.app }}
          bun run build
        continue-on-error: true # Type errors shouldn't block PRs initially
        
  server-tests:
    name: Server Tests
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: esim_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          
      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    env:
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
      SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
      REDIS_URL: redis://localhost:6379
      NODE_ENV: test
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
          
      - name: Install dependencies
        run: |
          cd server/server
          bun install
          
      - name: Run server tests
        run: |
          cd server/server
          bun test
          
      - name: Type check server
        run: |
          cd server/server
          bun run typecheck
        continue-on-error: true # Type errors shouldn't block PRs initially

  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [client-tests, server-tests]
    if: always()
    
    steps:
      - name: Check test results
        run: |
          if [[ "${{ needs.client-tests.result }}" == "failure" ]] || [[ "${{ needs.server-tests.result }}" == "failure" ]]; then
            echo "❌ Tests failed"
            exit 1
          else
            echo "✅ All tests passed"
          fi