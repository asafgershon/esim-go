/* tslint:disable */
/* eslint-disable */
/**
 *  Airalo Developer Platform 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import globalAxios from 'axios';
// Some imports not used depending on template conditions
// @ts-ignore
import { DUMMY_BASE_URL, assertParamExists, setApiKeyToObject, setBasicAuthToObject, setBearerAuthToObject, setOAuthToObject, setSearchParams, serializeDataIfNeeded, toPathString, createRequestFunction } from '../common';
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, type RequestArgs, BaseAPI, RequiredError, operationServerMap } from '../base';
// @ts-ignore
import type { V2SimsSimIccidUsageGet200Response } from '../models';
// @ts-ignore
import type { V2SimsSimIccidUsageGet404Response } from '../models';
// @ts-ignore
import type { V2TokenPost200ResponseMeta } from '../models';
/**
 * RESTAPIEndpointsMonitorUsageApi - axios parameter creator
 * @export
 */
export const RESTAPIEndpointsMonitorUsageApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * **Endpoint do support new type of packages - \"Voice and Text\"**    :::highlight blue ðŸ’¡ **This endpoint comes with a rate limit: 100 requests per minute (per unique iccid)** :::  This endpoint enables you to retrieve the total data, voice & text usage for a specific eSIM identified by its ICCID.  The access token, obtained from the \"Request Access Token\" endpoint, should be included in the request.  For more informations, best practices visit our FAQ page: [https://airalopartners.zendesk.com/hc/en-us/sections/13207524820893-FAQ](https://airalopartners.zendesk.com/hc/en-us/sections/13207524820893-FAQ)
         * @summary Get usage (data, text & voice)
         * @param {string} simIccid The ICCID of the eSIM for which you want to retrieve the data usage details.
         * @param {string} accept 
         * @param {string} authorization 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v2SimsSimIccidUsageGet: async (simIccid: string, accept: string, authorization: string, options: RawAxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'simIccid' is not null or undefined
            assertParamExists('v2SimsSimIccidUsageGet', 'simIccid', simIccid)
            // verify required parameter 'accept' is not null or undefined
            assertParamExists('v2SimsSimIccidUsageGet', 'accept', accept)
            // verify required parameter 'authorization' is not null or undefined
            assertParamExists('v2SimsSimIccidUsageGet', 'authorization', authorization)
            const localVarPath = `/v2/sims/{sim_iccid}/usage`
                .replace(`{${"sim_iccid"}}`, encodeURIComponent(String(simIccid)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;


    
            if (accept != null) {
                localVarHeaderParameter['Accept'] = String(accept);
            }
            if (authorization != null) {
                localVarHeaderParameter['Authorization'] = String(authorization);
            }
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * RESTAPIEndpointsMonitorUsageApi - functional programming interface
 * @export
 */
export const RESTAPIEndpointsMonitorUsageApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = RESTAPIEndpointsMonitorUsageApiAxiosParamCreator(configuration)
    return {
        /**
         * **Endpoint do support new type of packages - \"Voice and Text\"**    :::highlight blue ðŸ’¡ **This endpoint comes with a rate limit: 100 requests per minute (per unique iccid)** :::  This endpoint enables you to retrieve the total data, voice & text usage for a specific eSIM identified by its ICCID.  The access token, obtained from the \"Request Access Token\" endpoint, should be included in the request.  For more informations, best practices visit our FAQ page: [https://airalopartners.zendesk.com/hc/en-us/sections/13207524820893-FAQ](https://airalopartners.zendesk.com/hc/en-us/sections/13207524820893-FAQ)
         * @summary Get usage (data, text & voice)
         * @param {string} simIccid The ICCID of the eSIM for which you want to retrieve the data usage details.
         * @param {string} accept 
         * @param {string} authorization 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async v2SimsSimIccidUsageGet(simIccid: string, accept: string, authorization: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<V2SimsSimIccidUsageGet200Response>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.v2SimsSimIccidUsageGet(simIccid, accept, authorization, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['RESTAPIEndpointsMonitorUsageApi.v2SimsSimIccidUsageGet']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
    }
};

/**
 * RESTAPIEndpointsMonitorUsageApi - factory interface
 * @export
 */
export const RESTAPIEndpointsMonitorUsageApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = RESTAPIEndpointsMonitorUsageApiFp(configuration)
    return {
        /**
         * **Endpoint do support new type of packages - \"Voice and Text\"**    :::highlight blue ðŸ’¡ **This endpoint comes with a rate limit: 100 requests per minute (per unique iccid)** :::  This endpoint enables you to retrieve the total data, voice & text usage for a specific eSIM identified by its ICCID.  The access token, obtained from the \"Request Access Token\" endpoint, should be included in the request.  For more informations, best practices visit our FAQ page: [https://airalopartners.zendesk.com/hc/en-us/sections/13207524820893-FAQ](https://airalopartners.zendesk.com/hc/en-us/sections/13207524820893-FAQ)
         * @summary Get usage (data, text & voice)
         * @param {RESTAPIEndpointsMonitorUsageApiV2SimsSimIccidUsageGetRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v2SimsSimIccidUsageGet(requestParameters: RESTAPIEndpointsMonitorUsageApiV2SimsSimIccidUsageGetRequest, options?: RawAxiosRequestConfig): AxiosPromise<V2SimsSimIccidUsageGet200Response> {
            return localVarFp.v2SimsSimIccidUsageGet(requestParameters.simIccid, requestParameters.accept, requestParameters.authorization, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * RESTAPIEndpointsMonitorUsageApi - interface
 * @export
 * @interface RESTAPIEndpointsMonitorUsageApi
 */
export interface RESTAPIEndpointsMonitorUsageApiInterface {
    /**
     * **Endpoint do support new type of packages - \"Voice and Text\"**    :::highlight blue ðŸ’¡ **This endpoint comes with a rate limit: 100 requests per minute (per unique iccid)** :::  This endpoint enables you to retrieve the total data, voice & text usage for a specific eSIM identified by its ICCID.  The access token, obtained from the \"Request Access Token\" endpoint, should be included in the request.  For more informations, best practices visit our FAQ page: [https://airalopartners.zendesk.com/hc/en-us/sections/13207524820893-FAQ](https://airalopartners.zendesk.com/hc/en-us/sections/13207524820893-FAQ)
     * @summary Get usage (data, text & voice)
     * @param {RESTAPIEndpointsMonitorUsageApiV2SimsSimIccidUsageGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RESTAPIEndpointsMonitorUsageApiInterface
     */
    v2SimsSimIccidUsageGet(requestParameters: RESTAPIEndpointsMonitorUsageApiV2SimsSimIccidUsageGetRequest, options?: RawAxiosRequestConfig): AxiosPromise<V2SimsSimIccidUsageGet200Response>;

}

/**
 * Request parameters for v2SimsSimIccidUsageGet operation in RESTAPIEndpointsMonitorUsageApi.
 * @export
 * @interface RESTAPIEndpointsMonitorUsageApiV2SimsSimIccidUsageGetRequest
 */
export interface RESTAPIEndpointsMonitorUsageApiV2SimsSimIccidUsageGetRequest {
    /**
     * The ICCID of the eSIM for which you want to retrieve the data usage details.
     * @type {string}
     * @memberof RESTAPIEndpointsMonitorUsageApiV2SimsSimIccidUsageGet
     */
    readonly simIccid: string

    /**
     * 
     * @type {string}
     * @memberof RESTAPIEndpointsMonitorUsageApiV2SimsSimIccidUsageGet
     */
    readonly accept: string

    /**
     * 
     * @type {string}
     * @memberof RESTAPIEndpointsMonitorUsageApiV2SimsSimIccidUsageGet
     */
    readonly authorization: string
}

/**
 * RESTAPIEndpointsMonitorUsageApi - object-oriented interface
 * @export
 * @class RESTAPIEndpointsMonitorUsageApi
 * @extends {BaseAPI}
 */
export class RESTAPIEndpointsMonitorUsageApi extends BaseAPI implements RESTAPIEndpointsMonitorUsageApiInterface {
    /**
     * **Endpoint do support new type of packages - \"Voice and Text\"**    :::highlight blue ðŸ’¡ **This endpoint comes with a rate limit: 100 requests per minute (per unique iccid)** :::  This endpoint enables you to retrieve the total data, voice & text usage for a specific eSIM identified by its ICCID.  The access token, obtained from the \"Request Access Token\" endpoint, should be included in the request.  For more informations, best practices visit our FAQ page: [https://airalopartners.zendesk.com/hc/en-us/sections/13207524820893-FAQ](https://airalopartners.zendesk.com/hc/en-us/sections/13207524820893-FAQ)
     * @summary Get usage (data, text & voice)
     * @param {RESTAPIEndpointsMonitorUsageApiV2SimsSimIccidUsageGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RESTAPIEndpointsMonitorUsageApi
     */
    public v2SimsSimIccidUsageGet(requestParameters: RESTAPIEndpointsMonitorUsageApiV2SimsSimIccidUsageGetRequest, options?: RawAxiosRequestConfig) {
        return RESTAPIEndpointsMonitorUsageApiFp(this.configuration).v2SimsSimIccidUsageGet(requestParameters.simIccid, requestParameters.accept, requestParameters.authorization, options).then((request) => request(this.axios, this.basePath));
    }
}

